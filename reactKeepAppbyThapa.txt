Main React Keeper App by Thapa Technical

App.jsx fiel
import React, { useState } from "react";
import Header from "./Component/Header";
import CreateNote from "./Component/CreateNotes";
import Note from "./Component/Note";
import Footer from "./Component/Footer";

const App = () => {
  const [addItem, setAddItem] = useState([]);

  const addNote = (note) => {
    setAddItem((prevData) => {
      return [...prevData, note];
    });

    // console.log(addItem);
  };

  const onDelete = (id) => {
    setAddItem((olddata) =>
      olddata.filter((currdata, indx) => {
        return indx !== id;
      })
    );
  };

  return (
    <>
      <Header />
      <CreateNote passNote={addNote} />

      {addItem.map((val, index) => {
        return (
          <Note
            key={index}
            id={index}
            title={val.title}
            content={val.content}
            deleteItem={onDelete}
          />
        );
      })}

      <Footer />
    </>
  );
};

export default App;





CreateNote.jsx
import React, { useState } from "react";

import Button from "@material-ui/core/Button";
import AddIcon from "@material-ui/icons/Add";

const Note = (props) => {
  const [isExpand, setIsExpand] = useState(false);
  const [note, setNotes] = useState({
    title: "",
    content: "",
  });

  const inputEvent = (event) => {
    const { name, value } = event.target;

    setNotes((prevData) => {
      return {
        ...prevData,
        [name]: value,
      };
    });
  };

  const addEvent = () => {
    props.passNote(note);
    setNotes({
      title: "",
      content: "",
    });
  };

  const expandIt = () => {
    setIsExpand(true);
  };

  const backToOriginal = () => {
    setIsExpand(false);
  };

  return (
    <>
      <div className="main_note" onDoubleClick={backToOriginal}>
        <form>
          {isExpand ? (
            <input
              type="text"
              placeholder="Title"
              name="title"
              autoComplete="off"
              value={note.title}
              onChange={inputEvent}
            />
          ) : null}

          <br />
          <textarea
            placeholder="Write a note...."
            rows=""
            coloum="1"
            name="content"
            value={note.content}
            onChange={inputEvent}
            onClick={expandIt}
          ></textarea>

          {isExpand ? (
            <Button onClick={addEvent}>
              <AddIcon className="plus_sign" />
            </Button>
          ) : null}
        </form>
      </div>
    </>
  );
};

export default Note;



Note.jsx fiel

import React from "react";
import DeleteOutlineIcon from "@material-ui/icons/DeleteOutline";
import Button from "@material-ui/core/Button";

const Note = (props) => {
  const deleteNote = () => {
    alert("delete it now");
    props.deleteItem(props.id);
  };

  return (
    <>
      <div className="note">
        <h1> {props.title} </h1>
        <br />
        <p>{props.content} </p>
        <button onClick={deleteNote} className="btn">
          <DeleteOutlineIcon className="deleteIcon" />
        </button>
      </div>
    </>
  );
};

export default Note;








Header.jsx comp
import React from "react";
import logo from "../Images/logo.png";

const Header = () => {
  return (
    <>
      <div className="header">
        <img src={logo} alt="logo" width="70" height="50" />
        <h1>Thapa Keep</h1>
      </div>
    </>
  );
};

export default Header;




Footer.jsx

import React from "react";

const Footer = () => {
  const year = new Date().getFullYear();

  return (
    <>
      <footer>
        <p>copyright @ {year} </p>
      </footer>
    </>
  );
};

export default Footer;





Index.css file react jsx
@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@300&display=swap");
@import url("https://fonts.googleapis.com/css?family=Raleway:300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i");
@import url("https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@100;400&family=Roboto:wght@300&display=swap");
@import url("https://fonts.googleapis.com/css2?family=East+Sea+Dokdo&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Comfortaa:wght@700&family=East+Sea+Dokdo&display=swap");

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  font-family: "Josefin Sans", "Arial Narrow", Arial, sans-serif;
  /* background: #ecf0f1; */
}

.header {
  width: 100%;
  line-height: 100px;
  background-color: #f5ba13;
  display: flex;
  justify-content: start;
  align-items: center;
  padding-left: 50px;
  color: white;
  box-shadow: 5px 3px 15px -5px rgba(0, 0, 0, 0.5);
}

.main_note {
  width: 500px;
  padding: 15px 10px 5px 10px;
  margin: 20px auto;
}

.my_notes h1 {
  color: #34495e;
}
.my_notes p {
  color: grey;
}

form {
  min-height: 50px;
  color: #ecf0f1;
  padding: 15px 10px 5px 10px;
  box-shadow: 3px 5px 15px -5px rgba(0, 0, 0, 0.5);
  border-radius: 10px;
  position: relative;
}

input {
  width: 100%;
  line-height: 30px;
  background: transparent;
  border: none;
  outline: none;
  font-size: 1.5rem;
  margin: 10px 0;
  font-weight: bold;
}

textarea {
  width: 100%;
  line-height: 30px;
  background: transparent;
  border: none;
  outline: none;
  font-size: 1rem;
  margin: 10px 0;
}

.MuiButton-root {
  width: 30px;
  height: 50px;
  position: absolute;
  bottom: -28px;
  left: 400px;
  cursor: pointer;
  background-color: #fff !important;
  box-shadow: 5px 5px 15px -5px rgba(0, 0, 0, 0.5);
  border-radius: 50% !important;
}

.MuiButton-root .plus_sign {
  font-size: 45px !important;
  font-weight: 900;
  color: #f4b400;
  cursor: pointer;
  z-index: 222;
  background: transparent;
}

.MuiButton-root:hover {
  background: #f4b400 !important;
}
.MuiButton-root:hover .plus_sign {
  color: #fff;
  background: transparent;
}

.note {
  background: #fff;
  border-radius: 7px;
  box-shadow: 0 2px 5px #ccc;
  padding: 10px;
  width: 240px;
  margin: 16px;
  float: left;
}
.note h1 {
  font-size: 1.1em;
  margin-bottom: 6px;
}
.note p {
  font-size: 1.1em;
  margin-bottom: 10px;
  white-space: pre-wrap;
  word-wrap: break-word;
}

.note .btn {
  position: relative;
  float: right;
  margin-right: 10px;
  /* color: #f5ba13; */
  color: #f4b400;
  border: none;
  width: 50px;
  height: 50px;
  background: transparent;
  cursor: pointer;
  outline: none;
  box-shadow: 3px 3px 15px -10px rgba(0, 0, 0, 0.5);
  border-radius: 50%;
}

.deleteIcon {
  width: 0.7em;
  height: 0.7em;
}

.note .btn:hover {
  background-color: #f5ba13;
  background-color: #f4b400;
}

.note .btn:hover .deleteIcon {
  /* background-color: #f5ba13; */
  color: #fff;
}

footer {
  width: 100%;
  position: absolute;
  bottom: 0;
  font-size: 1.2rem;
  text-align: center;
  padding-bottom: 10px;
  color: #34495e;
}


